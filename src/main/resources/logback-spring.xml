<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">

    <!-- 引入Spring Boot默认的logback配置 -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!-- 从Spring配置中获取属性 -->
    <springProperty scope="context" name="app.name" source="spring.application.name" defaultValue="book-manger"/>
    <springProperty scope="context" name="log.path" source="logging.file.path" defaultValue="logs"/>
    <springProperty scope="context" name="console.log.pattern" source="logging.console.pattern" 
                    defaultValue="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"/>
    <springProperty scope="context" name="file.log.pattern" source="logging.file.pattern" 
                    defaultValue="%d{yyyy-MM-dd HH:mm:ss.SSS} [${app.name}] [%thread] %-5level %logger{50} - %msg%n"/>

    <!-- 日志文件路径和名称 -->
    <property name="LOG_HOME" value="${log.path}"/>
    <property name="LOG_FILE_NAME" value="${app.name}"/>

    <!-- 控制台输出 Appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${console.log.pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 只在非生产环境输出INFO及以上级别 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <!-- 文件输出 Appender - 所有级别日志 -->
    <appender name="FILE_ALL" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${LOG_FILE_NAME}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${file.log.pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件按天滚动 -->
            <fileNamePattern>${LOG_HOME}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- 日志保留天数 -->
            <maxHistory>30</maxHistory>
            <!-- 总日志大小限制 -->
            <totalSizeCap>10GB</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 单个日志文件大小限制 -->
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- 错误日志单独输出 Appender -->
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${LOG_FILE_NAME}-error.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${file.log.pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/${LOG_FILE_NAME}-error.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxHistory>60</maxHistory>
            <totalSizeCap>5GB</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!-- 只记录ERROR级别日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 异步文件输出 Appender -->
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 队列大小 -->
        <queueSize>2048</queueSize>
        <!-- 丢弃警告级别以下的日志 -->
        <discardingThreshold>20</discardingThreshold>
        <!-- 队列满时是否阻塞 -->
        <neverBlock>false</neverBlock>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="FILE_ALL"/>
    </appender>

    <!-- 异步错误日志输出 Appender -->
    <appender name="ASYNC_ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>512</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <neverBlock>false</neverBlock>
        <appender-ref ref="FILE_ERROR"/>
    </appender>

    <!-- 开发环境配置 -->
    <springProfile name="dev">
        <!-- 开发环境：控制台 + 文件输出，日志级别DEBUG -->
        <logger name="com.caoximu.bookmanger" level="DEBUG" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
        </logger>
        
        <!-- SQL日志 -->
        <logger name="com.caoximu.bookmanger.mapper" level="DEBUG" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
        </logger>
        
        <!-- MyBatis SQL语句日志 -->
        <logger name="com.baomidou.mybatisplus" level="DEBUG" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
        </logger>
        
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ASYNC_ERROR"/>
        </root>
    </springProfile>

    <!-- 测试环境配置 -->
    <springProfile name="test">
        <!-- 测试环境：主要记录到文件，控制台输出较少 -->
        <logger name="com.caoximu.bookmanger" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
        </logger>
        
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ASYNC_ERROR"/>
        </root>
    </springProfile>

    <!-- 生产环境配置 -->
    <springProfile name="prod">
        <!-- 生产环境：只记录到文件，不输出到控制台 -->
        <logger name="com.caoximu.bookmanger" level="INFO" additivity="false">
            <appender-ref ref="ASYNC_FILE"/>
        </logger>
        
        <!-- 数据库操作日志只记录WARN以上级别 -->
        <logger name="com.caoximu.bookmanger.mapper" level="WARN" additivity="false">
            <appender-ref ref="ASYNC_FILE"/>
        </logger>
        
        <!-- Spring框架日志 -->
        <logger name="org.springframework" level="WARN" additivity="false">
            <appender-ref ref="ASYNC_FILE"/>
        </logger>
        
        <!-- HTTP请求日志 -->
        <logger name="org.springframework.web" level="WARN" additivity="false">
            <appender-ref ref="ASYNC_FILE"/>
        </logger>
        
        <root level="INFO">
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ASYNC_ERROR"/>
        </root>
    </springProfile>

    <!-- 默认配置（当没有匹配的profile时使用） -->
    <springProfile name="!dev &amp; !test &amp; !prod">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ASYNC_ERROR"/>
        </root>
    </springProfile>

    <!-- 关闭一些不必要的日志 -->
    <logger name="org.apache.catalina.startup.DigesterFactory" level="ERROR"/>
    <logger name="org.apache.catalina.util.LifecycleBase" level="ERROR"/>
    <logger name="org.apache.coyote.http11.Http11NioProtocol" level="WARN"/>
    <logger name="org.apache.sshd.common.util.SecurityUtils" level="WARN"/>
    <logger name="org.apache.tomcat.util.net.NioSelectorPool" level="WARN"/>
    <logger name="org.eclipse.jetty.util.component.AbstractLifeCycle" level="ERROR"/>
    <logger name="org.hibernate.validator.internal.util.Version" level="WARN"/>
    <logger name="org.springframework.boot.actuate.endpoint.jmx" level="WARN"/>

</configuration>